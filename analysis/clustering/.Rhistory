library(ggplot2)
library(scales)
library(ggrepel)
library(factoextra)
library(reshape2)
library(gridExtra)
library(geomorph)
library(testit)
library(ape)
library(phytools)
library(phylotools)
library(geiger)
data <- read.table("all.counts", header = T, row.names=1, sep="\t")
data$size <- as.numeric(rowSums(data[,-1]))
data$percent <- cumsum(data$size)/sum(data$size)
annot_clust <- read.table("annotated.counts", header = T, row.names=1, sep="\t")
ord_table <- annot_clust[,(3:17)]
Mb_table <- ord_table*0.0095 
perc_table <- data.frame( lapply(Mb_table[1:3], function(x) x/1667), lapply(Mb_table[4:8], function(x) x/1698), lapply(Mb_table[9:13], function(x) x/880), lapply(Mb_table[14:15], function(x) x/587) )
mydata <- t(perc_table)
scaledata <- scale(mydata, center = T, scale = T)
d <- dist(scaledata, method = "euclidean")
cmdfit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
x <- cmdfit$points[,1]
y <- cmdfit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS",type="n")
text(x, y, labels = row.names(mydata), cex=.7)
points(x, y, pch=19) 
cmdpoints <- as.data.frame(cmdfit$points)
cmdpoints$genome <- sub("_.*", "", row.names(cmdpoints))
cmdpoints$species <- rownames(cmdpoints)
cluster.pca <- prcomp(mydata, scale = TRUE)
cluster.eig <- get_eigenvalue(cluster.pca)
ind.coord <- cluster.pca$x
subsections <- as.data.frame(mydata[,1:2])
subsections$sub <-c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "D5", "kirkii", "kokia")
subfac <- as.factor(subsections[,3])
ord_table[ord_table==0]=0.00000001 # no -Inf values in PCA, so make them really small here
logdata <- t(log(ord_table))
dlog <- dist(logdata, method = "euclidean")
logcmd <- cmdscale(dlog,eig=TRUE, k=2) # k is the number of dim
logx <- logcmd$points[,1]
logy <- logcmd$points[,2]
plot(logx, logy, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS",type="n")
text(logx, logy, labels = row.names(logdata), cex=.7)
points(logx, logy, pch=19) 
logcmdpoints <- as.data.frame(logcmd$points)
logcmdpoints$genome <- sub("_.*", "", row.names(logcmdpoints))
logcmdpoints$species <- rownames(logcmdpoints)
facGroup <- as.factor(c("A", "A", "A", "A", "A", "A", "A", "A", "D", "D", "D", "D", "D", "OG", "OG"))
facSpecies <- as.factor(c("A1", "A1", "A1", "A2", "A2", "A2", "A2", "A2", "D5", "D5", "D5", "D5", "D5", "kirkii", "kokia"))
species.diff <- advanced.procD.lm(mydata~facSpecies, ~1, groups=~facSpecies)
Kbamount <- data.frame(annot_clust[1], apply(annot_clust[2:16], 2, function (x) x*9.5))
KBsum <- aggregate(. ~Lineage, data=Kbamount, FUN=sum)
KBsum$A1 <- rowMeans(KBsum[,2:4])
KBsum$A2 <- rowMeans(KBsum[,5:9])
KBsum$D5 <- rowMeans(KBsum[,10:14])
KBsum$A1min <- apply(KBsum[,2:4], 1, min)
KBsum$A2min <- apply(KBsum[,5:9], 1, min)
KBsum$D5min <- apply(KBsum[,10:14], 1, min)
KBsum$kirkiimin <- KBsum$kirkii
KBsum$kokia_min <- KBsum$kokia_
KBsum$A1max <- apply(KBsum[,2:4], 1, max)
KBsum$A2max <- apply(KBsum[,5:9], 1, max)
KBsum$D5max <- apply(KBsum[,10:14], 1, max)
KBsum$kirkiimax <- KBsum$kirkii
KBsum$kokia_max <- KBsum$kokia_
KBsum <- KBsum[,-(2:14)]
KBm <- melt(KBsum[,-(7:16)])
min <- c(KBsum$kirkiimin, KBsum$kokia_min, KBsum$A1min, KBsum$A2min, KBsum$D5min)
max <- c(KBsum$kirkiimax, KBsum$kokia_max, KBsum$A1max, KBsum$A2max, KBsum$D5max)
KBm$min <- min
KBm$max <- max
limits <- aes(ymax=KBm$max, ymin=KBm$min)
dodge <- position_dodge(width=0.9)
head(Kbamount)
Kbamount[,3]
Kbamount[3,]
Kbamount[3,c(1:2)]
head(data)
head(annot_clust)
x <- annot_clust
head(x)
x[3,c(1:3)]
head(Kbamount)
head(annot_clust)
annot_clust$cluster <- NULL
Kbamount <- data.frame(annot_clust[1], apply(annot_clust[2:16], 2, function (x) x*9.5))
head(annot_clust)
KBsum <- aggregate(. ~Lineage, data=Kbamount, FUN=sum)
KBsum$A1 <- rowMeans(KBsum[,2:4])
KBsum$A2 <- rowMeans(KBsum[,5:9])
KBsum$D5 <- rowMeans(KBsum[,10:14])
KBsum$A1min <- apply(KBsum[,2:4], 1, min)
KBsum$A2min <- apply(KBsum[,5:9], 1, min)
KBsum$D5min <- apply(KBsum[,10:14], 1, min)
KBsum$kirkiimin <- KBsum$kirkii
KBsum$kokia_min <- KBsum$kokia_
KBsum$A1max <- apply(KBsum[,2:4], 1, max)
KBsum$A2max <- apply(KBsum[,5:9], 1, max)
KBsum$D5max <- apply(KBsum[,10:14], 1, max)
KBsum$kirkiimax <- KBsum$kirkii
KBsum$kokia_max <- KBsum$kokia_
KBsum <- KBsum[,-(2:14)]
KBm <- melt(KBsum[,-(7:16)])
min <- c(KBsum$kirkiimin, KBsum$kokia_min, KBsum$A1min, KBsum$A2min, KBsum$D5min)
max <- c(KBsum$kirkiimax, KBsum$kokia_max, KBsum$A1max, KBsum$A2max, KBsum$D5max)
KBm$min <- min
KBm$max <- max
KdGk <- annot_clust[,c(1,15:16)]
KdGk$signK <- {ifelse((KdGk$kirkii > KdGk$kokia_), "positive", "negative")} 
chi_table <- annot_clust[,c(1,15:16)]
chi_table <- chi_table[!(rowSums(chi_table[,c(2:3)])==0),]
chi_table$p.value <- apply(chi_table[,c(2:3)], 1, function(x) chisq.test(x, simulate.p.value=TRUE, B=50000)$p.value)
chi_table$statistic <- apply(chi_table[,c(2:3)], 1, function(x) chisq.test(x)$statistic) # don't need to sim p-value here; this stat stays the same
chi_table$p.adjust <- p.adjust(chi_table$p.value, method="BH")
p05 <- row.names(chi_table[(chi_table$p.adjust<0.05),])
p05
sigtable <- chi_table[p05,c(1:3)]
sigtable$greater <- ifelse(sigtable$kokia_ > sigtable$kirkii, "kokia", ifelse(sigtable$kirkii > sigtable$kokia_, "kirkii", "same"))
sigtable
q()
